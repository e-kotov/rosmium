% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_info.R
\name{osm_file_info}
\alias{osm_file_info}
\title{Show information about an OSM file}
\usage{
osm_file_info(
  input_path,
  extended = FALSE,
  get = NULL,
  crc = FALSE,
  object_type = NULL,
  output = c("text", "json", "list"),
  echo_cmd = FALSE,
  echo = FALSE,
  spinner = TRUE,
  verbose = FALSE,
  progress = FALSE
)
}
\arguments{
\item{input_path}{String. Path to the OSM file.}

\item{extended}{A logical(1). Read the entire file (not just header)? Defaults to \code{FALSE}. Reading extended info may be slow, as it reads the entire file. This is also required if the file does not have a bounding box in the header, and you need to calculate it from the data. Specifically, to get or calculate the bounding box, you need can use the \link{osm_get_bbox} function.}

\item{get}{String or NULL. If non-NULL, returns only this variable's value (using \verb{--get=}). Must be a full CLI variable name (e.g. \code{file.name}, \code{header.option.generator}, \code{data.bbox}, or any other supported variable listed by \verb{osmium fileinfo --show-variables}). A shorthand of \code{"generator"} is recognized and maps to \code{header.option.generator}. To get the list of valid variable names, use \code{osm_file_info_variables()}.}

\item{crc}{A logical. Calculate CRC32? Defaults to \code{FALSE}; automatically enabled if \code{output = "json"}. Ignored when \code{get} is used.}

\item{object_type}{Character vector or NULL. Only applies when \code{extended = TRUE}.
One or more of \verb{"node","way","relation","changeset"}.}

\item{output}{One of \code{"text"}, \code{"json"}, or \code{"list"}. Defaults to \code{"text"}.}

\item{echo_cmd}{A logical. Whether to print the Osmium command generated by the function call to the screen.
Defaults to \code{FALSE}.}

\item{echo}{A logical. Whether to print the standard output and error generated by the Osmium call to the screen.
Defaults to \code{TRUE}.}

\item{spinner}{A logical. Whether to show a reassuring spinner while the Osmium call is being executed.
Defaults to \code{TRUE}.}

\item{verbose}{A logical. Whether to display detailed information on the running command. Defaults to \code{FALSE}.}

\item{progress}{A logical. Whether to display a progress bar while running
the command. Defaults to \code{FALSE}.}
}
\value{
\itemize{
\item If \code{output = "text"}: character scalar (plain-text dump).
\item If \code{output = "json"}: character scalar (raw JSON string).
\item If \code{output = "list"}: an R list parsed via \code{RcppSimdJson::fparse()}.
\item If \code{get} is non-NULL: a single string \code{"<var>=<value>"}.
}
}
\description{
This is a wrapper for \href{https://docs.osmcode.org/osmium/latest/osmium-fileinfo.html}{osmium fileinfo}.
Returns OSM file & header info in three possible formats:
\itemize{
\item \code{"text"}: the original plain‐text dump
\item \code{"json"}: the raw JSON string emitted by \code{--json}
\item \code{"list"}: the JSON parsed to an R list via \code{RcppSimdJson::fparse()}
}
}
\examples{
\dontshow{if (identical(tolower(Sys.getenv("NOT_CRAN")), "true")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
pbf <- system.file("extdata/cur.osm.pbf", package = "rosmium")

# 1. plain-text (default)
txt <- osm_file_info(pbf)
cat(substr(txt, 1, 200), "...", "\n")

# 2. raw JSON
j <- osm_file_info(pbf, output = "json")
cat(substr(j, 1, 200), "...", "\n")

# 3. parsed list
lst <- osm_file_info(pbf, output = "list")
str(lst[c("file","header")])
\dontshow{\}) # examplesIf}
}
