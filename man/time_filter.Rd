% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_filter.R
\name{time_filter}
\alias{time_filter}
\title{Create a time snapshot from an OSM history file}
\usage{
time_filter(
  input_path,
  timestamp,
  output_path,
  overwrite = FALSE,
  echo_cmd = FALSE,
  spinner = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{input_path}{A string. The path to the OSM history file to be filtered.
Please see \link{file_formats} for a list of supported file formats.}

\item{timestamp}{A string, Date, or POSIXct. The timestamp in ISO 8601 format
(e.g., "2015-01-01T00:00:00Z") representing the point in time for the snapshot.
If a Date or POSIXct object is provided, it will be converted automatically.}

\item{output_path}{A string. The path to the file where the output should be
written to. Please see \link{file_formats} for a list of supported file formats.}

\item{overwrite}{A logical. Whether existing files should be overwritten by
the output. Defaults to \code{FALSE}.}

\item{echo_cmd}{A logical. Whether to print the Osmium command generated by
the function call to the screen. Defaults to \code{FALSE}.}

\item{spinner}{A logical. Whether to show a reassuring spinner while the
Osmium call is being executed. Defaults to \code{TRUE}.}

\item{verbose}{A logical. Whether to display detailed information on the
running command. Defaults to \code{FALSE}.}
}
\value{
The normalized path to the output file.
}
\description{
Filters objects from an OSM history file based on a specified point in time.
The output is a normal OSM data file containing the data as it would have
looked at the specified time (UTC).
}
\examples{
\dontrun{
history_path <- system.file("extdata/cur.osm.pbf", package = "rosmium")

output <- time_filter(
  input_path = history_path,
  timestamp = as.Date("2015-01-01"),
  output_path = tempfile(fileext = ".osm.pbf")
)

}
}
